buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
   jacoco {
        toolVersion = "0.7.1.201405082137"
        reportsDir = file("$buildDir/customJacocoReportDir")
    }
android {
    compileSdkVersion 23
    buildToolsVersion '21.1.2'
 
   
    defaultConfig {
        applicationId "com.techandsolve.jimmymuchachasoy.test"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName '1.0'
    }
    buildTypes {
        debug {
            //runProguard true
            proguardFiles 'proguard-rules.txt'
            testCoverageEnabled = true
        }
        release {
            //runProguard false
            proguardFiles 'proguard-rules.txt'
            testCoverageEnabled = false
        }
    }
    sourceSets {
        androidTest.setRoot('src/test')
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
    productFlavors {
    }

    //!! REMARK !!
    //add this library to work with Robolectric 3.0 when your API level >= 23.
    //the HttpClient has been removed as of API Level 23, but Robolectric is automatically
    //shadowing this class. So add it, even though you're not using it.
    useLibrary 'org.apache.http.legacy'
}

dependencies {
    // ================== LIBRARIES ======================
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    //Using the appcompat library is not necessary when the minsdk >= 14
    //compile 'com.android.support:appcompat-v7:+'

    compile 'com.android.support:support-v4:23.1.1'

    //for more information on the Butterknife injection framework
    //visit https://github.com/JakeWharton/butterknife
    compile 'com.jakewharton:butterknife:6.1.0'


    // ================== TESTING LIBRARIES ======================
    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:3.0'

    testCompile 'org.bouncycastle:bcprov-jdk15on:1.50'
    testCompile 'com.jakewharton:butterknife:6.1.0'

    androidTestCompile 'org.robolectric:robolectric:3.0'

}

android.testOptions.unitTests.all {
    // configure the set of classes for JUnit tests
    include '**/*Test.class'
    //exclude '**/espresso/**/*.class'

    // configure max heap size of the test JVM
    maxHeapSize = "2048m"
}




apply plugin: "jacoco"

// Define coverage source.
// If you have rs/aidl etc... add them here.
def coverageSourceDirs = [  
        'src/main/java',
        'src/gen'
]

// This differs per what flavors buildTypes etc. 
// But this example shows the 'testDebug'
// which is standard for Robolectric
task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {  
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
    // class R is used, but usage will not be covered, so ignore this class from report
    // This differs per plugin version (0.10 -> 0.11) 
    // have very different fileTrees.
    // I have added rules to Ignore Dagger/Butterknife
    classDirectories = fileTree(
            dir: './build/intermediates/classes/debug',
            excludes: ['com/myapp/R*.class',
                       '**/*$InjectAdapter.class',
                       '**/*$ModuleAdapter.class',
                       '**/*$ViewInjector*.class'
            ])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebug.exec')
    // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
    // We iterate through the compiled .class tree and rename $$ to $. 
    doFirst {
        new File('myapp/build/intermediates/classes/').eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
     
}

task jacocoTestReport2 {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}
