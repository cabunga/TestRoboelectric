buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
jacoco {
    toolVersion = "0.7.1.201405082137"
    reportsDir = file("$buildDir/customJacocoReportDir")
}
android {
    compileSdkVersion 23
    buildToolsVersion '21.1.2'
 
   
    defaultConfig {
        applicationId "com.techandsolve.jimmymuchachasoy.test"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName '1.0'
    }
    buildTypes {
        debug {
            //runProguard true
            proguardFiles 'proguard-rules.txt'
            testCoverageEnabled = true
        }
        release {
            //runProguard false
            proguardFiles 'proguard-rules.txt'
            testCoverageEnabled = false
        }
    }
    sourceSets {
        androidTest.setRoot('src/test')
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
    productFlavors {
    }

    //!! REMARK !!
    //add this library to work with Robolectric 3.0 when your API level >= 23.
    //the HttpClient has been removed as of API Level 23, but Robolectric is automatically
    //shadowing this class. So add it, even though you're not using it.
    useLibrary 'org.apache.http.legacy'
}

dependencies {
    // ================== LIBRARIES ======================
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

    //Using the appcompat library is not necessary when the minsdk >= 14
    //compile 'com.android.support:appcompat-v7:+'

    compile 'com.android.support:support-v4:23.1.1'

    //for more information on the Butterknife injection framework
    //visit https://github.com/JakeWharton/butterknife
    compile 'com.jakewharton:butterknife:6.1.0'


    // ================== TESTING LIBRARIES ======================
    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:3.0'

    testCompile 'org.bouncycastle:bcprov-jdk15on:1.50'
    testCompile 'com.jakewharton:butterknife:6.1.0'

    androidTestCompile 'org.robolectric:robolectric:3.0'

}

apply plugin: "jacoco"

jacoco {
    toolVersion = "0.7.1.201405082137"
}

task jacocoTestReport(type: JacocoReport /*, dependsOn: ['test'] */ ) {
    description = "Generates Jacoco coverage reports: XML and HTML"
    group = "Reporting"
//                outputs.upToDateWhen { false }

    // use hidden configuration, for details look into JacocoPlugin.groovy
    jacocoClasspath = project.configurations['androidJacocoAnt']

    // exclude auto-generated classes and tests
    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*']

    def debugTree = fileTree(dir: "app/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "app/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.projectDir, includes: ['**/*.exec', '**/*.ec'])

    reports {
        xml {
            enabled = true
            destination = "app/reports/jacoco/test/jacocoTestReport.xml"
        }
        csv.enabled false
        html {
            enabled = true
            destination = "app/reports/jacoco"
        }
    }
}
